// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/ECOMMERCE_PROJECT/pkg/api"
	"github.com/ECOMMERCE_PROJECT/pkg/api/handlers"
	"github.com/ECOMMERCE_PROJECT/pkg/config"
	"github.com/ECOMMERCE_PROJECT/pkg/db"
	"github.com/ECOMMERCE_PROJECT/pkg/repository"
	"github.com/ECOMMERCE_PROJECT/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(configConfig config.Config) (*api.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(configConfig)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository)
	cartRepository := repository.NewCartRepository(gormDB)
	cartUseCase := usecase.NewCartUsecase(cartRepository)
	userHandler := handlers.NewUserHandelr(userUseCase, cartUseCase)
	adminRepository := repository.NewAdminRepository(gormDB)
	adminUsecase := usecase.NewAdminUsecase(adminRepository)
	adminHandler := handlers.NewAdminHandler(adminUsecase)
	productRepository := repository.NewProductRepostiory(gormDB)
	productUsecase := usecase.NewProductUsecase(productRepository)
	productHandler := handlers.NewProductHandler(productUsecase)
	cartHandler := handlers.NewCartHandler(cartUseCase)
	serverHTTP := api.NewServerHTTP(userHandler, adminHandler, productHandler, cartHandler)
	return serverHTTP, nil
}
